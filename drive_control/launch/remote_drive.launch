<launch>

    <arg name="machine" default="rock64"/>

    <include file="$(find drive_control)/launch/remote_hosts.launch"/>

	<node name="dynamixel_manager" pkg="servo_controller" type="controller_manager.py" output="screen" machine="$(arg machine)">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                steer_port:
                    port_name: "/dev/dynamixel"
                    baud_rate: 115200
                    min_motor_id: 0
                    max_motor_id: 1
                    update_rate: 20
        </rosparam>
    </node>

	<rosparam file="$(find servo_controller)/config/dynamixel_joint_controllers.yaml" command="load"/>
    
    <!-- start specified joint controllers -->
    <!-- <node name="dynamixel_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py" -->
    <node name="dynamixel_controller_spawner" pkg="servo_controller" type="controller_spawner.py" machine="$(arg machine)"
          args="--manager=dxl_manager
                --port=steer_port
                --type=simple
                front_controller
                back_controller"
          output="screen"/>

    <!-- Accepts commanded VESC speed in electrical RPM. Electrical RPM is the mechanical RPM
         multiplied by the number of motor poles. Any value is accepted by this
         driver. However, note that the VESC may impose a more restrictive bounds on the
         range depending on its configuration. -->
    <node pkg="vesc_driver" type="vesc_driver_node" name="vesc_node" output="screen" machine="$(arg machine)" >
        <param name="port" value="/dev/vesc" />
    </node>

	<node pkg="drive_control" type="control_node.py" name="control_node" machine="$(arg machine)">
        <param name="control_value_mode"     value="0"/>
        <param name="control_value_scale"    value="5882.0"/>
        <param name="front_steer_scale"      value="1.0"/>
        <param name="rear_steer_scale"       value="1.0"/>
    </node>

</launch>
